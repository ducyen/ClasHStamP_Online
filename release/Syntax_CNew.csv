item,name,ext1st,extnxt,begin,end
file,[cONTAINER]/[nAME].c,,"#include ""[nAME].h""[->64][dESC]
","/* File generated by Đức's ClasHStamP */
#define __[nAME]_INTERNAL__
#include ""CommonInclude.h""
#include ""[nAME].h""
",
class,,,,,
b_enum,"/* [nAME]列挙型の値から文字列に変換する関数（デバッグ用） */
const TCHAR* [nAME]_toString( [nAME] value ){
","    switch( value ){
    case [nAME]: return _T( ""[nAME]"" );
","    case [nAME]: return _T( ""[nAME]"" );
",,"    default: return _T( ""[nAME]_UNKNOWN"" );
    }
}
"
c_enum,"/* [nAME]列挙型の値から文字列に変換する関数（デバッグ用） */
const TCHAR* [nAME]_toString( [nAME] value ){
","    switch( value ){
    case [nAME]: return _T( ""[nAME]"" );
","    case [nAME]: return _T( ""[nAME]"" );
",,"    default: return _T( ""[nAME]_UNKNOWN"" );
    }
}
"
i_enum,"typedef enum tag[nAME] {
","    [nAME],[->64][dESC]
","    [nAME],[->64][dESC]
",,"    [nAME]_NUM
}[nAME];
"
b_struct,,,,,
c_struct,,,,,
i_struct,"typedef struct tag[nAME] {
","    [tYPE] [nAME][mODIFIER];[->64][dESC]
","    [tYPE] [nAME][mODIFIER];[->64][dESC]
","typedef struct tag[nAME] {
    [tYPE] base;
","}[nAME];
"
constructor,"[cONTAINER]* [nAME]_Copy( [nAME]* p[nAME], const [nAME]* pSource ){
",,,,"    return ( [cONTAINER]* )p[nAME];
}
"
attr_group,,,,,
ctor_call,"    [cONTAINER]_Copy( ( [cONTAINER]* )p[nAME], ( [cONTAINER]* )pSource );
",,,,
__s_attr,,,,"    p[cONTAINER]->[nAME] = pSource->[nAME];
","    p[cONTAINER]->[nAME] = pSource->[nAME];
"
__o_attr,,,,"    memcpy( &p[cONTAINER]->[nAME], &pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
","    memcpy( &p[cONTAINER]->[nAME], &pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
"
__r_attr,,,,"    p[cONTAINER]->[nAME] = pSource->[nAME];
","    p[cONTAINER]->[nAME] = pSource->[nAME];
"
_ms_attr,,,,"    memcpy( p[cONTAINER]->[nAME], pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
","    memcpy( p[cONTAINER]->[nAME], pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
"
_mo_attr,,,,"    memcpy( p[cONTAINER]->[nAME], pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
","    memcpy( p[cONTAINER]->[nAME], pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
"
_mr_attr,,,,"    memcpy( p[cONTAINER]->[nAME], pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
","    memcpy( p[cONTAINER]->[nAME], pSource->[nAME], sizeof( p[cONTAINER]->[nAME] ) );
"
c_s_attr,,,,,
c_o_attr,,,,,
c_r_attr,,,,,
cms_attr,,,,,
cmo_attr,,,,,
cmr_attr,,,,,
s_s_attr,"/** @private @static @memberof [cONTAINER] */
static [tYPE][mODIFIER] [nAME] = [vALUE];[->64][dESC]
","/** @private @static @memberof [cONTAINER] */
static const [tYPE][mODIFIER] [nAME] = [vALUE];[->64][dESC]
",,,"/** @private @static @memberof [cONTAINER] */
static [tYPE][mODIFIER] [nAME];[->64][dESC]
"
s_o_attr,"/** @private @static @memberof [cONTAINER] */
static [tYPE][mODIFIER] [nAME] = [vALUE];[->64][dESC]
","/** @private @static @memberof [cONTAINER] */
static const [tYPE][mODIFIER] [nAME] = [vALUE];[->64][dESC]
",,,"/** @private @static @memberof [cONTAINER] */
static [tYPE][mODIFIER] [nAME];[->64][dESC]
"
s_r_attr,"/** @private @static @memberof [cONTAINER] */
static [tYPE][mODIFIER]* [nAME] = [vALUE];[->64][dESC]
","/** @private @static @memberof [cONTAINER] */
static const [tYPE][mODIFIER]* [nAME] = [vALUE];[->64][dESC]
",,,"/** @private @static @memberof [cONTAINER] */
static [tYPE][mODIFIER]* [nAME];[->64][dESC]
"
sms_attr,"/** @private @static @memberof [cONTAINER] */
static [tYPE] [nAME][ [mODIFIER] ] = [vALUE];[->64][dESC]
","/** @private @static @memberof [cONTAINER] */
static const [tYPE] [nAME][ [mODIFIER] ] = [vALUE];[->64][dESC]
",,,"/** @private @static @memberof [cONTAINER] */
static [tYPE] [nAME][ [mODIFIER] ];[->64][dESC]
"
smo_attr,"/** @private @static @memberof [cONTAINER] */
static [tYPE] [nAME][ [mODIFIER] ] = [vALUE];[->64][dESC]
","/** @private @static @memberof [cONTAINER] */
static const [tYPE] [nAME][ [mODIFIER] ] = [vALUE];[->64][dESC]
",,,"/** @private @static @memberof [cONTAINER] */
static [tYPE] [nAME][ [mODIFIER] ];[->64][dESC]
"
smr_attr,"/** @private @static @memberof [cONTAINER] */
static [tYPE]* [nAME][ [mODIFIER] ] = [vALUE];[->64][dESC]
","/** @private @static @memberof [cONTAINER] */
static const [tYPE]* [nAME][ [mODIFIER] ] = [vALUE];[->64][dESC]
",,,"/** @private @static @memberof [cONTAINER] */
static [tYPE]* [nAME][ [mODIFIER] ];[->64][dESC]
"
p_s_attr,,"[tYPE][mODIFIER] [cONTAINER]_Get[Name]( const [cONTAINER]* p[cONTAINER] ){
[vALUE]}
","void [cONTAINER]_Set[Name]( [cONTAINER]* p[cONTAINER], [tYPE][mODIFIER] value ){
[vALUE]}
","[->]return p[cONTAINER]->[nAME];
","[->]p[cONTAINER]->[nAME] = value;
"
p_o_attr,,"[tYPE]* [cONTAINER]_Get[Name]( const [cONTAINER]* p[cONTAINER] ){
[vALUE]}
","void [cONTAINER]_Set[Name]( [cONTAINER]* p[cONTAINER], const [tYPE]* value ){
[vALUE]}
","[->]return &p[cONTAINER]->[nAME];
","[->]p[cONTAINER]->[nAME] = *value;
"
p_r_attr,,"[tYPE]* [cONTAINER]_Get[Name]( const [cONTAINER]* p[cONTAINER] ){
    return p[cONTAINER]->p[Name];
}
","void [cONTAINER]_Set[Name]( [cONTAINER]* p[cONTAINER], [tYPE]* value ){
    p[cONTAINER]->p[Name] = value;
}
","[->]return p[cONTAINER]->[nAME];
","[->]p[cONTAINER]->[nAME] = value;
"
pms_attr,,"const [tYPE][mODIFIER]* [cONTAINER]_Get[Name]( const [cONTAINER]* p[cONTAINER] ){
    return p[cONTAINER]->[Name];
}
","void [cONTAINER]_Set[Name]( [cONTAINER]* p[cONTAINER], const [tYPE][mODIFIER]* value ){
    memcpy( p[cONTAINER]->[Name], value, sizeof( p[cONTAINER]->[Name] ) );
}
","[->]return p[cONTAINER]->[nAME];
","[->]p[cONTAINER]->[nAME] = value;
"
pmo_attr,,"[tYPE]* [cONTAINER]_Get[Name]( [cONTAINER]* p[cONTAINER], UINT32 index ){
    return &p[cONTAINER]->[Name][ index ];
}
","void [cONTAINER]_Set[Name]( [cONTAINER]* p[cONTAINER], const [tYPE]* value, UINT32 index ){
    memcpy( p[cONTAINER]->[Name][ index ], value, sizeof( [tYPE] ) );
}
","[->]return p[cONTAINER]->[nAME];
","[->]p[cONTAINER]->[nAME] = value;
"
pmr_attr,,"[tYPE]* [cONTAINER]_Get[Name]( const [cONTAINER]* p[cONTAINER], UINT32 index ){
    return p[cONTAINER]->[Name][ index ];
}
","void [cONTAINER]_Set[Name]( [cONTAINER]* p[cONTAINER], [tYPE]* value, UINT32 index  ){
    p[cONTAINER]->[Name][ index ] = value;
}
","[->]return p[cONTAINER]->[nAME];
","[->]p[cONTAINER]->[nAME] = value;
"
vptr_impl,"const [cONTAINER]Vtbl g[tYPE]Vtbl = {
[nAME]};
",,,"    .p[nAME][->32] = [cONTAINER]_[nAME],","
"
__c_oper,"/** @protected @memberof [cONTAINER] */
static [tYPE][mODIFIER] [cONTAINER]_[nAME](
    [vALUE]* p[vALUE]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
__b_oper,"/** @public @memberof [cONTAINER] */
static [tYPE][mODIFIER] [cONTAINER]_[nAME](
    [vALUE]* p[vALUE]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
vptr_decl,,,,,
_ac_oper,"/** @protected @pure @memberof [cONTAINER] */
[tYPE][mODIFIER] [cONTAINER]_[nAME](
    [cONTAINER]* p[cONTAINER]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
_ab_oper,"/** @public @pure @memberof [cONTAINER] */
[tYPE][mODIFIER] [cONTAINER]_[nAME](
    [cONTAINER]* p[cONTAINER]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
l_i_oper,"/** @private @memberof [cONTAINER] */
static [tYPE][mODIFIER] [cONTAINER]_[nAME](
    [cONTAINER]* p[cONTAINER]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
l_c_oper,"/** @protected @memberof [cONTAINER] */
[tYPE][mODIFIER] [cONTAINER]_[nAME](
    [cONTAINER]* p[cONTAINER]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
l_b_oper,"/** @public @memberof [cONTAINER] */
[tYPE][mODIFIER] [cONTAINER]_[nAME](
    [cONTAINER]* p[cONTAINER]",",
    [tYPE][mODIFIER] [nAME]",",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
lai_oper,[tYPE][mODIFIER] [cONTAINER]_[nAME]( [cONTAINER]* p[cONTAINER],", [tYPE][mODIFIER] [nAME]",", [tYPE][mODIFIER] [nAME]"," );
",
vptr_call,"    if( p[cONTAINER]->vTbl == NULL || p[cONTAINER]->vTbl->p[nAME] == NULL ){ return ( [tYPE] )0; }
    return p[cONTAINER]->vTbl->p[nAME]( p[cONTAINER]",", [nAME]",", [nAME]","    if( p[cONTAINER]->vTbl == NULL || p[cONTAINER]->vTbl->p[nAME] == NULL ){ return; }
    p[cONTAINER]->vTbl->p[nAME]( p[cONTAINER]"," );
"
s_i_oper,"/** @private @static @memberof [cONTAINER] */
STATIC [tYPE][mODIFIER] [cONTAINER]_[nAME](
",    [tYPE][mODIFIER] [nAME],",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
s_c_oper,"[tYPE][mODIFIER] [cONTAINER]_[nAME](
",    [tYPE][mODIFIER] [nAME],",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
s_b_oper,"[tYPE][mODIFIER] [cONTAINER]_[nAME](
",    [tYPE][mODIFIER] [nAME],",
    [tYPE][mODIFIER] [nAME]","
){
","} /* [cONTAINER]_[nAME] */

"
sai_oper,STATIC [tYPE][mODIFIER] [cONTAINER]_[nAME]( ,[tYPE][mODIFIER] [nAME],", [tYPE][mODIFIER] [nAME]"," );
",
sab_oper,,,,,
event_decl,"const TCHAR* [nAME]Event_toString( [nAME]_EVENT value ){
","    switch( value ){
    case [tYPE]_[nAME]: return _T( ""[nAME]"" );
","    case [tYPE]_[nAME]: return _T( ""[nAME]"" );
",,"    default: return _T( ""[nAME]_UNKNOWN"" );
    }
}
static BOOL [cONTAINER]_Reset( [tYPE]* p[tYPE], [cONTAINER]* pUsm, BOOL lastEnteredStateRecovering, uint64_t entryPt );
static void [cONTAINER]_Prepare( [cONTAINER]* pUsm, HdStateMachine* pParent );
static BOOL [cONTAINER]_EventProc( [tYPE]* p[tYPE], [cONTAINER]* pUsm, [tYPE]_EVENT nEventId, void* pEventParams );
static BOOL [cONTAINER]_StateDefaultTrans( [tYPE]* p[tYPE], [cONTAINER]* pUsm );
BOOL [tYPE]_Start( [tYPE]* p[tYPE] ){
    [cONTAINER]_Prepare( &p[tYPE]->mainStm, NULL );
    BOOL bResult = [cONTAINER]_Reset( p[tYPE], &p[tYPE]->mainStm, FALSE, STATE_UNDEF );
    bResult |= [cONTAINER]_StateDefaultTrans( p[tYPE], &p[tYPE]->mainStm );
    return bResult;
}
BOOL [tYPE]_EventProc( [tYPE]* p[tYPE], [tYPE]_EVENT nEventId, void* pEventParams ){
    BOOL bResult = [cONTAINER]_EventProc( p[tYPE], &p[tYPE]->mainStm, nEventId, pEventParams );
    bResult |= [cONTAINER]_StateDefaultTrans( p[tYPE], &p[tYPE]->mainStm );
    return bResult;
}
"
state_decl,,,,,
state_entry,"static void [cONTAINER]_EndTrans( [tYPE] *p[tYPE], HdStateMachine* pStm ){
    pStm->nCurrentState = pStm->nTargetState;
    pStm->bIsExternTrans = FALSE;
","    switch( pStm->nCurrentState ){
    case [sCOPE]_[nAME]:[->32][Scope]_[nAME]_Entry( p[tYPE], pStm ); break;
","    case [sCOPE]_[nAME]:[->32][Scope]_[nAME]_Entry( p[tYPE], pStm ); break;
","    default: break;
    }
","}
"
state_exit,"static void [cONTAINER]_BgnTrans( [tYPE] *p[tYPE], HdStateMachine* pStm, uint64_t targetState ){
    pStm->nTargetState = targetState;
    pStm->nPseudostate = targetState;
","    switch( pStm->nCurrentState ){
    case [sCOPE]_[nAME]:[->32][Scope]_[nAME]_Exit( p[tYPE], pStm ); break;
","    case [sCOPE]_[nAME]:[->32][Scope]_[nAME]_Exit( p[tYPE], pStm ); break;
","    default: break;
    }
","}
"
state_impl,"static BOOL [cONTAINER]_Reset( [tYPE]* p[tYPE], HdStateMachine* pStm, BOOL bUnused, uint64_t nEntryPoint ) {
    if( nEntryPoint != STATE_UNDEF ){
        pStm->nPseudostate = nEntryPoint;
        return FALSE;
    }
    if( pStm->nPseudostate == STATE_UNDEF ){
        pStm->nPseudostate = [sCOPE]_[nAME];
    }
    [cONTAINER]_BgnTrans( p[tYPE], pStm, pStm->nPseudostate );
    [cONTAINER]_EndTrans( p[tYPE], pStm );
    return TRUE;
}
static BOOL [cONTAINER]_EventProc( [tYPE]* p[tYPE], HdStateMachine* pStm, [tYPE]_EVENT nEventId, void* pEventParams ){
    BOOL bResult = FALSE;
    pStm->nLCAState = STATE_UNDEF;
","    switch( pStm->nCurrentState ){
    case [sCOPE]_[nAME]:[->48]bResult |= [Scope]_[nAME]_EventProc( p[tYPE], pStm, nEventId, pEventParams ); break;
","    case [sCOPE]_[nAME]:[->48]bResult |= [Scope]_[nAME]_EventProc( p[tYPE], pStm, nEventId, pEventParams ); break;
","    default: break;
    }
","    return bResult;
}
static BOOL [cONTAINER]_Abort( [tYPE]* p[tYPE], HdStateMachine* pStm ) {
    pStm->nSourceState = [sCOPE]_[nAME];
    [cONTAINER]_BgnTrans( p[tYPE], pStm, [sCOPE]_[nAME] );
    [cONTAINER]_EndTrans( p[tYPE], pStm );
    return TRUE;
}
"
transition,"static void [Scope]_[nAME]_Entry( [tYPE]* p[tYPE], HdStateMachine* pStm ){
    if( HdStateMachine_Enterable( pStm, [sCOPE]_[nAME] ) ){
        [Scope]_[cONTAINER]_Entry( p[tYPE], pStm );
[vALUE]        HdStateMachine_DefaultEntryAction( pStm, p[tYPE], ""[dESC]"" );
    }
[mODIFIER]}
static BOOL [Scope]_[nAME]_EventProc( [tYPE]* p[tYPE], HdStateMachine* pStm, [tYPE]_EVENT nEventId, void* pEventParams ){
    BOOL bResult = FALSE;
    pStm->nSourceState = [sCOPE]_[nAME];
    HdStateMachine_DefaultDoingAction( pStm, p[tYPE], ""[dESC]"" );
","    switch( nEventId ){
    case [tYPE]_[nAME]:{
","    } break;
    case [tYPE]_[nAME]:{
","    } break;
    default: break;
    }
","    return bResult ? bResult : [Scope]_[cONTAINER]_EventProc( p[tYPE], pStm, nEventId, pEventParams );
}
static void [Scope]_[nAME]_Exit( [tYPE]* p[tYPE], HdStateMachine* pStm ){
    if( HdStateMachine_Exitable( pStm, [sCOPE]_[nAME] ) ){ 
        HdStateMachine_DefaultExitAction( pStm, p[tYPE], ""[dESC]"" );
[vALUE]        [Scope]_[cONTAINER]_Exit( p[tYPE], pStm );
    }
}
"
trans_top,"static void [Scope]_[nAME]_Entry( [tYPE]* p[tYPE], HdStateMachine* pStm ){
    if( HdStateMachine_Enterable( pStm, [sCOPE]_[nAME] ) ){
[vALUE]        //HdStateMachine_DefaultEntryAction( pStm, p[tYPE], ""[dESC]"" );
    }
[mODIFIER]}
static BOOL [Scope]_[nAME]_EventProc( [tYPE]* p[tYPE], HdStateMachine* pStm, [tYPE]_EVENT nEventId, void* pEventParams ){
    BOOL bResult = FALSE;
    pStm->nSourceState = [sCOPE]_[nAME];
    //HdStateMachine_DefaultDoingAction( pStm, p[tYPE], ""[dESC]"" );
","    switch( nEventId ){
    case [tYPE]_[nAME]:{
","    } break;
    case [tYPE]_[nAME]:{
","    } break;
    default: break;
    }
","    return bResult;
}
static void [Scope]_[nAME]_Exit( [tYPE]* p[tYPE], HdStateMachine* pStm ){
    if( HdStateMachine_Exitable( pStm, [sCOPE]_[nAME] ) ){ 
        //HdStateMachine_DefaultExitAction( pStm, p[tYPE], ""[dESC]"" );
[vALUE]    }
}
"
branch,"[->]else {
","[->]if ([nAME]) {
","[->]} else if ([nAME]) {
","[->]} else {
","[->]}
"
comment,/**< [nAME] [->32]*/," * [nAME]
"," * [nAME]
","/**
"," */
"
action,"[->][nAME]Params* e = ( [nAME]Params* )pEventParams;
","[->][nAME]
","[->][nAME]
",,
param_dir,,,,-2,
inheritance,,,,,
template,,,,,
statemachine,,,,"
/**
 * Implementation for Statemachine: [nAME]
 */
","
static void [sCOPE]_Prepare( [sCOPE]* pUsm, HdStateMachine* pParent ){
    pUsm->pParentStm = pParent;
[vALUE]}
"
default_trans,"static BOOL [cONTAINER]_StateDefaultTrans( [tYPE]* p[tYPE], HdStateMachine* pStm ){
    BOOL bResult = FALSE;
    pStm->nSourceState = pStm->nCurrentState;
    pStm->nLCAState = STATE_UNDEF;
","[->]if( pStm->nCurrentState == [sCOPE]_[vALUE] && pStm->nPseudostate == [cONTAINER]_[nAME] [mODIFIER] ){
","[->]}else if( pStm->nCurrentState == [sCOPE]_[vALUE] && pStm->nPseudostate == [cONTAINER]_[nAME] [mODIFIER] ){
","[->]}else if( pStm->nCurrentState != pStm->nPseudostate ){
[->]    [cONTAINER]_BgnTrans( p[tYPE], pStm, pStm->nPseudostate );
[->]    [cONTAINER]_EndTrans( p[tYPE], pStm );
[->]    bResult = TRUE;
[->]}else{
[->]}
","    return bResult;
}
"
substm,,"    [cONTAINER]_Prepare( &pUsm->[nAME], &pUsm->[mODIFIER] );
",,"[->][cONTAINER]_Reset( p[tYPE], &( ( [sCOPE]* )pStm->pMain )->[mODIFIER], pStm->lastEnteredStateRecovering,  [cONTAINER]_[nAME] );
","[->]( ( [sCOPE]* )pStm->pMain )->pParentStm->nPseudostate = [sCOPE]_[nAME];
"
region,"static void [cONTAINER]_BgnTrans( [tYPE] *p[tYPE], HdStateMachine* pStm, uint64_t targetState );
static void [cONTAINER]_EndTrans( [tYPE] *p[tYPE], HdStateMachine* pStm );
static BOOL [cONTAINER]_Abort( [tYPE]* p[tYPE], HdStateMachine* pStm );
static BOOL [cONTAINER]_Reset( [tYPE]* p[tYPE], HdStateMachine* pStm, BOOL bUnused, uint64_t nEntryPoint );
static BOOL [cONTAINER]_EventProc( [tYPE]* p[tYPE], HdStateMachine* pStm, [tYPE]_EVENT nEventId, void* pEventParams );
","    pUsm->[nAME].pMain = pUsm;
","
[->] && ( ( [sCOPE]* )pStm->pMain )->[cONTAINER].nPseudostate == [sCOPE]_[vALUE]","[->][cONTAINER]_Reset( p[tYPE], &( ( [sCOPE]* )pStm->pMain )->[mODIFIER], FALSE, [sCOPE]_[nAME] );
",
state_action,"[->]if( pStm->nTargetState == [sCOPE]_[nAME] ){
[->]    pStm->nPseudostate = [sCOPE]_[mODIFIER];
[->]}
",pStm->bIsExternTrans = FALSE;      // Not implemented ★,"[->][nAME]              // Need merge from ""action"" ★

","[->][cONTAINER]_Reset( p[tYPE], &( ( [sCOPE]* )pStm->pMain )->[mODIFIER], FALSE, STATE_UNDEF );
","[->][cONTAINER]_Abort( p[tYPE], &( ( [sCOPE]* )pStm->pMain )->[mODIFIER] );
"
trans_action,"[->][nAME]Params* e = ( [nAME]Params* )pEventParams; // need merge from ""action"" ★
","HdStateMachine_IsIn( &( ( [sCOPE]* )pStm->pMain )->[mODIFIER], [sCOPE]_[vALUE] )","
[->] && HdStateMachine_IsIn( &( ( [sCOPE]* )pStm->pMain )->[mODIFIER], [sCOPE]_[vALUE] )","[->][cONTAINER]_BgnTrans( p[tYPE], pStm, [sCOPE]_[nAME] );
[mODIFIER][->][cONTAINER]_EndTrans( p[tYPE], pStm );
[->]bResult = TRUE;
","[mODIFIER][->]bResult = TRUE; // internal transition
"
history,,,"[->]( ( [sCOPE]* )pStm->pMain )->[nAME] = [sCOPE]_[vALUE];
","[->]if( ( ( [sCOPE]* )pStm->pMain )->[nAME] != STATE_UNDEF ){
[->]    [cONTAINER]_BgnTrans( p[tYPE], pStm, ( ( [sCOPE]* )pStm->pMain )->[nAME] );
[mODIFIER][->]    [cONTAINER]_EndTrans( p[tYPE], pStm );
[->]    bResult = TRUE;
[->]}else{
[vALUE][->]}
","[->]( ( [sCOPE]* )pStm->pMain )->[nAME] = STATE_UNDEF;
"
deep_hist,,,[->]( ( [sCOPE]* )pStm->pMain )->[nAME] = pStm->lastEnteredState;,"[->]if( ( ( [sCOPE]* )pStm->pMain )->[nAME] != STATE_UNDEF ){
[->]    [cONTAINER]_BgnTrans( p[tYPE], pStm, ( ( [sCOPE]* )pStm->pMain )->[nAME] );
[->]    pStm->lastEnteredStateRecovering = TRUE;
[mODIFIER][->]    [cONTAINER]_EndTrans( p[tYPE], pStm );
[->]    bResult = TRUE;
[->]}else{
[vALUE][->]}
","[->]if ( pStm->lastEnteredStateRecovering ) {
[->]    pStm->nPseudostate = pStm->lastEnteredState;
[->]}
"
stm_api,"static BOOL [sCOPE]_EventProc( [tYPE]* p[tYPE], [sCOPE]* pUsm, [tYPE]_EVENT nEventId, void* pEventParams ){
    BOOL bResult = FALSE;
[vALUE]    return bResult;
}
static BOOL [sCOPE]_StateDefaultTrans( [tYPE]* p[tYPE], [sCOPE]* pUsm ){
    BOOL bResult;
    while( TRUE ){
        bResult = FALSE;
[mODIFIER]        if( bResult == FALSE ){
            break;
        }
    }
    return bResult;
}
static BOOL [sCOPE]_Reset( [tYPE]* p[tYPE], [sCOPE]* pUsm, BOOL lastEnteredStateRecovering, uint64_t entryPt ){
    pUsm->lastEnteredStateRecovering = lastEnteredStateRecovering;
    return [cONTAINER]_Reset( p[tYPE], &pUsm->[cONTAINER], FALSE, entryPt );
}
static BOOL [sCOPE]_Abort( [tYPE]* p[tYPE], [sCOPE]* pUsm ){
    return [cONTAINER]_Abort( p[tYPE], &pUsm->[cONTAINER] );
}
","    bResult |= [mODIFIER][cONTAINER]_EventProc( p[tYPE], &pUsm->[cONTAINER], nEventId, pEventParams );
","[cONTAINER]_EventProc( p[tYPE], &pUsm->[mODIFIER], nEventId, pEventParams ) || ","        bResult |= [mODIFIER][cONTAINER]_StateDefaultTrans( p[tYPE], &pUsm->[cONTAINER] );
","[cONTAINER]_StateDefaultTrans( p[tYPE], &pUsm->[mODIFIER] ) || "
api_call,,,,,
friend,,,,,
visibility,,,,,
object,"Sprite* g_objects[] = {
[vALUE]
};
Sprite* getobj( int id ){
    return g_objects[ id ];
}
","
[->]    P( { [vALUE] } )[->64]/* [nAME] */",",
[->]    P( [vALUE] )[->64]/* [nAME] */","[->]&[tYPE]_Ctor( [->64]/* [nAME] */[vALUE]
[->])",",
[->]&[tYPE]_Ctor( [->64]/* [nAME] */[vALUE]
[->])"
